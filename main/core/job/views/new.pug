extends ../../../common/_layout

block content
    .container-fluid
        .row.text-center
            .col-md-3
            .col-md-6
                form(method="POST" action=`/job/create/${flow_id}`)
                    input(type='hidden', name='project_id', value=project_id)
                    //- Section 1: Select Service
                    .card.mt-4#serviceCard
                        .card-header
                            h4 Select Service
                        .card-body
                            table.table.table-hover#serviceDataTable
                                thead
                                    tr
                                        th Service Name
                                tbody
                                    each service in services
                                        tr(data-service-id=service._id)
                                            td= service.name
                    //- Section 2: Select Template
                    .card.mt-4#templateCard(style='display: none;')
                        .card-header
                            h4 Select Template
                        .card-body
                            .row
                                .col-md-6
                                    table.table.table-hover#templateDataTable
                                        thead
                                            tr
                                                th Template Name
                                        tbody
                                            each template in templates
                                                tr(data-template-id=template._id data-service=template.service)
                                                    td= template.name
                                    p#no-templates-message(style='display: none;') No Templates for this Service
                                    a.btn.btn-primary(style='display: none;')#manage-templates-button(href="/template") Manage Templates
                                .col-md-6
                                    h4 Template Preview
                                    p lorum ipsum blah blah 
                    //- Section 3: Add Data
                    .card.mt-4#dataCard(style='display: none;')
                        .card-header
                            h4 Add Data
                        .card-body
                            table.table#dataTable
                                thead
                                    tr
                                        th Name
                                        th Select
                                tbody
                                    each datum in data
                                        tr
                                            td= datum.name
                                            td
                                                .custom-control.custom-checkbox
                                                    input.custom-control-input(type='checkbox', name='data[]', id=`data-${datum._id}`, value=datum._id)
                                                    label.custom-control-label(for=`data-${datum._id}`)
                    //- Section 4: Add Dependencies
                    .card.mt-4#dependenciesCard(style='display: none;')
                        .card-header
                            h4 Add Dependencies
                        .card-body(style='max-height: 300px; overflow-y: auto;')
                            table.table
                                thead
                                    tr
                                        th Name
                                        th Select
                                tbody
                                    each dependency in dependencies
                                        tr
                                            td= dependency.name
                                            td
                                                .custom-control.custom-checkbox
                                                    input.custom-control-input(type='checkbox', name='dependencies[]', id=`dependency-${dependency._id}`, value=dependency._id)
                                                    label.custom-control-label(for=`dependency-${dependency._id}`)
                    //- Section 5: Loops
                    .card.mt-4#loopsCard(style='display: none;')
                        .card-header
                            h4 Loops
                        .card-body
                            .form-group
                                label(for='loop') Enable Looping
                                input.custom-control-input(type='checkbox', name='loop', id='loop', value='true')
                            .form-group
                                label(for='loops') Number of Loops
                                input#loops.form-control(type='number', name='loops', value='1', min='1')
                            .form-group
                                label(for='loopArray') Loop Array (JSON format)
                                textarea#loopArray.form-control(name='loop_array', placeholder='["key": "value"]')
                    //- Section 6: Set as Flow / Project Output
                    .card.mt-4#outputCard(style='display: none;')
                        .card-header
                            h4 Set as Flow / Project Output
                        .card-body
                            .form-group
                                .custom-control.custom-checkbox
                                    input.custom-control-input(type='checkbox', name='flow_output', id='flow_output', value='true')
                                    label.custom-control-label(for='flow_output') Set as Flow Output
                                .custom-control.custom-checkbox
                                    input.custom-control-input(type='checkbox', name='project_output', id='project_output', value='true')
                                    label.custom-control-label(for='project_output') Set as Project Output
                                        .form-group.mt-4
                                            button.btn.btn-primary(type='submit') Create Job

    script.
        $(document).ready(function() {
            const serviceDataTable = initializeDataTable('#serviceDataTable');
            const templateDataTable = initializeDataTable('#templateDataTable');
            appendHiddenTemplateInput();

            templateDataTable.on('click', 'tbody tr', function() {
                updateTemplateId($(this).data('template-id'));
            });

            let selectedData = [];
            let selectedDependencies = [];

            serviceDataTable.on('click', 'tbody tr', function() {
                handleRowSelection($(this), $(this).data('service-id'));
            });

            templateDataTable.on('click', 'tbody tr', function() {
                handleRowSelection($(this), null, $(this).data('template-id'));
            });

            $('#dataCard, #dependenciesCard').on('change', 'input[type-checkbox]', function() {
                handleCheckboxChange($(this));
            });

            $('#selectedDataList, #selectedDependenciesList').on('click', '.remove-item', function() {
                handleRemoveButtonClick($(this));
            });
        });

        function initializeDataTable(selector) {
            return $(selector).DataTable({
                scrollY: 300,
                scroller: true
            });
        }

        function appendHiddenTemplateInput() {
            $('form').append('<input type="hidden" name="template_id" id="template_id" />');
        }

        function updateTemplateId(templateId) {
            $('#template_id').val(templateId);
        }

        function handleRowSelection(row, serviceId, templateId = null) {
            const cardIds = ['#dataCard', '#dependenciesCard', '#loopsCard', '#outputCard'];
            row.siblings().removeClass('selected');
            row.addClass('selected');
            if (serviceId) {
                $('#templateCard').show();
                filterTemplatesByService(serviceId, templateId);
            }
            cardIds.forEach(id => $(id).show());
        }

        function filterTemplatesByService(serviceId) {
            const filteredData = templateDataTable
                .rows()
                .nodes()
                .to$()
                .filter(function() {
                    return $(this).data('service') == serviceId;
                }).toArray();
            templateDataTable.clear();
            templateDataTable.rows.add(filteredData).draw();
        }

        function handleCheckboxChange(checkbox) {
            const type = checkbox.closest('.card').attr('id').replace('Card', '');
            const listSelector = `#selected${type.charAt(0).toUpperCase() + type.slice(1)}List`;
            const id = checkbox.data(`${type}-id`);
            if (checkbox.is(':checked')) {
                updateSelectedList(type, id, checkbox.next('label').text(), listSelector, true);
            } else {
                updateSelectedList(type, id, checkbox.next('label').text(), listSelector, false);
            }
        }

        function updateSelectedList(type, id, itemName, listSelector, add) {
            if (add) {
                selected[type].push(id);
                addToList(listSelector, id, itemName);
            } else {
                selected[type] = selected[type].filter(itemId => itemId !== id);
                removeFromList(listSelector, id);
            }
        }

        function addToList(listId, itemId, itemName) {
            const listItem = $('<li>').addClass('list-group-item').text(itemName).attr('data-id', itemId);
            const removeButton = $('<button>').addClass('btn btn-danger btn-sm float-right remove-item').text('Remove');
            listItem.append(removeButton);
            $(listId).append(listItem);
        }

        function removeFromList(listId, itemId) {
            $(`${listId} [data-id="${itemId}"]`).remove();
        }

        function handleRemoveButtonClick(button) {
            const itemId = button.closest('li').data('id');
            const listId = button.closest('ul').attr('id');
            removeFromList(`#${listId}`, itemId);
            updateCheckboxStatus(listId, itemId);
        }

        function updateCheckboxStatus(listId, itemId) {
            const type = listId.includes('Data') ? 'data' : 'dependencies';
            $(`input[data-${type}-id="${itemId}"]`).prop('checked', false);
        }
